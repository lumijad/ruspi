{{#*inline "page"}}
    <h1 class="h3 mb-4 text-gray-800">Web socket upgrade (echo server)</h1>

    <div class="row">
        <div class="col-lg-12">
            <div class="card mb-4 py-3 border-left-success">
                <div class="card-body">
                    <h6 class="m-0 font-weight-bold text-primary">Warp echo server with websocket</h6>
                    <div id="echo">
                        <p><em>Connecting...</em></p>
                    </div>
                    <input type="text" id="text"/>
                    <button class="btn btn-success" type="button" id="send">Send</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow mb-4">
                <!-- Card Header - Accordion -->
                <a href="#collapseJsSource" class="d-block card-header py-3" data-toggle="collapse" role="button"
                   aria-expanded="true" aria-controls="collapseJsSource">
                    <h6 class="m-0 font-weight-bold text-primary">Java script code.</h6>
                </a>
                <!-- Card Content - Collapse -->
                <div class="collapse show" id="collapseJsSource">
                    <div class="card-body">
                        Source code:
                        <pre>
                        <code class="javascript">
var uri = 'wss://' + location.host + '/echo';
var ws = new WebSocket(uri);

function message(data) {
    var line = document.createElement('p');
    line.innerText = data;
    echo.appendChild(line);
}

ws.onopen = function() {
    echo.innerHTML = "&lt;p>&lt;em>Connected!&lt;/em>&lt;/p>";
}

ws.onmessage = function(msg) {
    message(msg.data);
};

send.onclick = function() {
    var msg = text.value;
    ws.send('Echo:' + msg);
    text.value = '';

    message('You:' + msg);
};
                        </code>
                    </pre>
                    </div>
                    <a href="https://github.com/lumijad/ruspi-examples/blob/master/ruspi-warp/src/web_socket_upgrade/main.rs"
                       class="btn btn-sm header-btn">
                        <i class="fa fa-github-alt"></i>
                        <span>View on GitHub</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow mb-4">
                <!-- Card Header - Accordion -->
                <a href="#collapseWarpSource" class="d-block card-header py-3" data-toggle="collapse" role="button"
                   aria-expanded="true" aria-controls="collapseWarpSource">
                    <h6 class="m-0 font-weight-bold text-primary">Web socket upgrade with warp.</h6>
                </a>
                <!-- Card Content - Collapse -->
                <div class="collapse show" id="collapseWarpSource">
                    <div class="card-body">
                        <pre><code class="rust">
use futures::{FutureExt, StreamExt};
use warp::Filter;

#[tokio::main]
async fn main() {
    pretty_env_logger::init();

    let echo = warp::path("echo")
        // The `ws()` filter will prepare the Websocket handshake.
        .and(warp::ws())
        .map(|ws: warp::ws::Ws| {
            // And then our closure will be called when it completes...
            ws.on_upgrade(|websocket| {
                // Just echo all messages back...
                let (tx, rx) = websocket.split();
                rx.forward(tx).map(|result| {
                    if let Err(e) = result {
                        eprintln!("websocket error: {:?}", e);
                    }
                })
            })
        });

    // GET / -> index html
    let index = warp::path::end().map(|| warp::reply::html(INDEX_HTML));

    let routes = index.or(echo);

    warp::serve(routes).run(([127, 0, 0, 1], 8080)).await;
}
                        </code></pre>
                    </div>
                    <a href="https://github.com/lumijad/ruspi-examples/blob/master/ruspi-warp/src/web_socket_upgrade/main.rs"
                       class="btn btn-sm header-btn">
                        <i class="fa fa-github-alt"></i>
                        <span>View on GitHub</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        var uri = 'wss://' + location.host + '/websocket/echo';
        var ws = new WebSocket(uri);

        function message(data) {
            var line = document.createElement('p');
            line.innerText = data;
            echo.appendChild(line);
        }

        ws.onopen = function() {
            echo.innerHTML = "<p><em>Connected!</em></p>";
        }

        ws.onmessage = function(msg) {
            message(msg.data);
        };

        send.onclick = function() {
            var msg = text.value;
            ws.send('Echo: ' + msg);
            text.value = '';

            message('You: ' + msg);
        };
        </script>

{{/inline}}
{{~> (layout)~}}
